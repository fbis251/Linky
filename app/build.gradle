apply plugin: 'com.android.application'
apply from: '../config/quality/quality.gradle'
apply plugin: 'realm-android'

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.0'
    defaultConfig {
        applicationId 'com.fernandobarillas.linkshare'
        minSdkVersion 15
        targetSdkVersion 30
        versionCode 19
        versionName '2.11 API/0.7'
    }
    dataBinding {
        enabled = true
    }
    signingConfigs {
        release {
            readKeystoreProperties()
        }
    }
    lintOptions {
        checkReleaseBuilds true
        abortOnError true
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguard-realm.pro'
        }
        fb {
            initWith release
            applicationIdSuffix '.fb'
            versionNameSuffix '-fb'
        }
        debug {
            shrinkResources false
            versionNameSuffix '-debug'
            applicationIdSuffix '.debug'
        }
    }
    splits {
        abi {
            enable project.hasProperty('abiSplitBuild')
            reset()
            include 'armeabi-v7a', 'mips', 'x86'
            universalApk true
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    applicationVariants.all { variant ->
        variant.resValue "string", "applicationId", variant.applicationId
        variant.resValue "string", "versionName", variant.versionName
    }
}

dependencies {
    implementation 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.github.Kennyc1012:BottomSheet:2.3.4'
    implementation 'com.github.varunest:sparkbutton:1.0.5'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation('com.mikepenz:materialdrawer:5.9.5@aar') { transitive = true }
    implementation 'com.squareup.moshi:moshi:1.9.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.7.2'
    implementation 'com.squareup.okhttp3:okhttp:4.7.2'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.takisoft.fix:preference-v7:25.3.1.1'
    implementation 'de.psdev.licensesdialog:licensesdialog:1.9.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.0'
    implementation 'io.realm:android-adapters:2.1.0'
    testImplementation 'junit:junit:4.13'
}

def readKeystoreProperties() {
    def propsPath = '/tmp/keystore/fb_rsa_4096.keystore.properties'
    def propsFile = rootProject.file(propsPath)
    def configName = 'release'
    if (propsFile.exists() && android.signingConfigs.hasProperty(configName)) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        android.signingConfigs[configName].storeFile = file(props['storeFile'])
        android.signingConfigs[configName].storePassword = props['storePassword']
        android.signingConfigs[configName].keyAlias = props['keyAlias']
        android.signingConfigs[configName].keyPassword = props['keyPassword']
        println '===== read keystore properties success ====='
    }
}
